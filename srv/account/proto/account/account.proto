syntax = "proto3";

package accountsrv;

// import "shared/proto/basic/error.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "github.com/infobloxopen/protoc-gen-gorm/options/gorm.proto";
// import "github.com/infobloxopen/protoc-gen-gorm/types/types.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

// Ref: https://github.com/seizadi/atlas-template/blob/master/resolved/pkg/pb/cmdb.proto

service UserService {
	rpc Exist(UserRequest) returns (UserExistResponse) {}
    rpc List(UserListQuery) returns (UserListResponse) {}
    rpc Get(UserRequest) returns (UserResponse) {}
    rpc Create(UserRequest) returns (UserResponse) {}
    rpc Update(UserRequest) returns (UserResponse) {}
	rpc Delete(UserRequest) returns (UserResponse) {}
}

service ProfileService {
    rpc List(ProfileListQuery) returns (ProfileListResponse) {}
    rpc Get(ProfileRequest) returns (ProfileResponse) {}
    rpc Create(ProfileRequest) returns (ProfileResponse) {}
}

message User {
    option (validate.disabled) = true;
    option (gorm.opts) = {
        ormable: true,
    };

    // gorm.types.UUID id                      = 1  [(gorm.field).tag = { type: "uuid", primary_key: true, not_null: true, unique: true }]; // primary key
    // string id                               = 1  [(gorm.field).tag = { type: "uuid", primary_key: true, default: "uuid_generate_v4()" }]; // primary key
    string id                               = 1  [(gorm.field).tag = { type: "uuid", primary_key: true }]; // primary key
    google.protobuf.Timestamp createdAt     = 2  [(gorm.field).tag = { not_null:true }];
    google.protobuf.Timestamp updatedAt     = 3  [(gorm.field).tag = { not_null:true }];
    google.protobuf.Timestamp deletedAt     = 4  [(gorm.field).tag = { index: "idx_users_deleted_at" }];
    string username                         = 7  [(gorm.field).tag = { size: 100, not_null:true }];
	string firstName                        = 8  [(gorm.field).tag = { size: 255, not_null:true }];
	string lastName                         = 9  [(gorm.field).tag = { not_null:true }];
    string email                            = 10 [(gorm.field).tag = { not_null:true }];
    Profile Profile                         = 11;
}


// FIXME: https://github.com/envoyproxy/protoc-gen-validate/issues/223
// with Workaround in .override.go
message UserRequest {
    google.protobuf.StringValue id = 1  [(validate.rules).string.uuid = true]; // Not Working
    google.protobuf.StringValue username = 2 [(validate.rules).string = {
                            min_len: 4
                            max_len: 16
                            pattern:  "^[a-z0-9_-]{3,15}$",
                            max_bytes: 256,
                        }];
    google.protobuf.StringValue firstName = 3 [(validate.rules).string.min_len = 3];
    google.protobuf.StringValue lastName = 4 [(validate.rules).string.min_len = 3];
    google.protobuf.StringValue email = 5 [(validate.rules).string.email = true]; // Not Working
  }

message UserResponse {
    option (validate.disabled) = true;
    User result = 1;
    // basic.Error error =2;
}

message UserExistResponse {
    option (validate.disabled) = true;
	bool result = 1;
}

// FIXME: https://github.com/envoyproxy/protoc-gen-validate/issues/223
// Workaround in .override.go
message UserListQuery {
    google.protobuf.UInt32Value limit = 1 [(validate.rules).uint32 = {gte:1, lte: 100}];
    google.protobuf.UInt32Value page= 2 [(validate.rules).uint32.gte = 1];
    google.protobuf.StringValue sort= 3;
	google.protobuf.StringValue username = 4 [(validate.rules).string = {
                                                min_len: 4
                                                max_len: 16
                                                pattern:   "^[a-z0-9_-]{3,15}$",
                                                max_bytes: 256,
                                            }];
    google.protobuf.StringValue firstName = 5 [(validate.rules).string.min_len = 3];
    google.protobuf.StringValue lastName = 6 [(validate.rules).string.min_len = 3];
    google.protobuf.StringValue email = 7 [(validate.rules).string.email = true]; // Not Working
}
message UserListResponse {
    option (validate.disabled) = true;

    repeated User results = 1;
    uint32 total = 2;
}

// enum GenderType {
//     M = 0;
//     F = 1;
// }

// Profile Entity
message Profile {
    option (validate.disabled) = true;
    option (gorm.opts) = {
        ormable: true,
    };

    // gorm.types.UUID id                      = 1  [(gorm.field).tag = { type: "uuid", primary_key: true, not_null: true, unique: true }]; // primary key
    // string id                               = 1  [(gorm.field).tag = { type: "uuid", primary_key: true, default: "uuid_generate_v4()" }]; // primary key
    string id                               = 1  [(gorm.field).tag = {type: "uuid", primary_key: true}]; // primary key
    google.protobuf.Timestamp createdAt     = 2  [(gorm.field).tag = { not_null:true }];
    google.protobuf.Timestamp updatedAt     = 3  [(gorm.field).tag = { not_null:true }];
    google.protobuf.Timestamp deletedAt     = 4  [(gorm.field).tag = { index: "idx_profiles_deleted_at" }];
	string tz                               = 5; // *time.Location?
    string avatar                           = 6;
    // FIXME: https://github.com/jinzhu/gorm/issues/1978
    string gender                           = 7; //    GenderType `gorm:"not null;type:ENUM('M', 'F')"`
    // GenderType gender                       = 7; //    GenderType `gorm:"not null;type:ENUM('M', 'F')"`
    google.protobuf.Timestamp birthday      = 8  [(gorm.field).tag = { not_null:true }];
    uint32 age                              = 9  [(gorm.field).drop = true]; // synthetic field
}

// FIXME: https://github.com/envoyproxy/protoc-gen-validate/issues/223
// Workaround in .override.go
message ProfileRequest {
    google.protobuf.StringValue id = 1 [(validate.rules).string.uuid = true]; // Not Working
    google.protobuf.StringValue userId = 2 [(validate.rules).string.uuid = true]; // Not Working
    google.protobuf.StringValue tz = 3;
    google.protobuf.StringValue avatar = 4 [(validate.rules).string.uri_ref = true];
    google.protobuf.StringValue gender = 5 [(validate.rules).string = {in: ["M", "F"]}];
    // GenderType gender = 5; // enum // [(validate.rules).enum.defined_only = true]; // FIXME
    google.protobuf.Timestamp birthday = 6 [(validate.rules).timestamp.lt_now = true];
}

message ProfileResponse {
    option (validate.disabled) = true;

    Profile result = 1;
}

message ProfileListQuery {
    google.protobuf.UInt32Value limit   = 1 [(validate.rules).uint32 = {gte:1, lte: 100}];
    google.protobuf.UInt32Value page    = 2 [(validate.rules).uint32.gte = 1];
    google.protobuf.StringValue sort    = 3;
	google.protobuf.StringValue userId  = 4 [(validate.rules).string.uuid = true];
    google.protobuf.StringValue gender  = 5 [(validate.rules).string = {in: ["M", "F"]}];
    // GenderType gender = 5; // FIXME
}

message ProfileListResponse {
    option (validate.disabled) = true;

    repeated Profile results = 1;
    uint32 total = 2;
}
